preciso que abra o arquivo *.py quando cliclado... usando o firefox.exe
"C:\Program Files\Firefox Developer Edition\firefox.exe"
"C:\Program Files\Firefox Developer Edition"

 Diretório: J:\Meu Drive\ProjetosPython\Loterias\AbrirSitesLocais


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----        25/02/2025     06:35                requisitos
d-----        10/02/2025     10:12                venv
d-----        10/02/2025     11:40                templates
d-----        10/02/2025     19:51                static
------        10/02/2025     09:55           1096 LICENSE
------        10/02/2025     09:55             51 README.md
------        24/02/2025     18:35             56 requirements.txt
------        10/02/2025     20:03           3866 app.py


from flask import Flask, render_template, jsonify
import os

app = Flask(__name__)

# Lista de sites externos para abrir
SITES = [
    {
        'name': 'Portifólio do Maia',
        'url': 'https://portifoliodomaia.netlify.app/'
    },
    {
        'name': 'Loterias Caixa',
        'url': 'https://loteriascaixa.netlify.app/'
    },
    {
        'name': 'Estratégias para Mega Sena',
        'url': 'https://estrategiasparamegasena.netlify.app/'
    },
    {
        'name': 'Estatísticas | Resumo',
        'url': 'https://resumomegasena.onrender.com/'
    },
    {
        'name': 'Geradores | Combinação I',
        'url': 'https://combinacao-i.onrender.com/'
    },
    {
        'name': 'Estratégias | Palpites I',
        'url': 'https://palpitesmegasena.onrender.com/'
    },
    {
        'name': 'Estratégias | Palpites II',
        'url': 'https://palpitesms.onrender.com/'
    },
    {
        'name': 'Estratégias | Colunas',
        'url': 'https://colunas.onrender.com/'
    },
    {
        'name': 'Estratégias | Quadrantes',
        'url': 'https://estrategiasparamegasena.netlify.app/historicoderesultados/index1a'
    },
    {
        'name': 'Resultados | Todos Sorteios + filtro avançado',
        'url': 'https://estrategiasparamegasena.netlify.app/historicoderesultados/index5'
    },
    {
        'name': 'Estratégias | Palpites III',
        'url': 'https://palpitesmegas.onrender.com/'
    }
]

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/list_sites')
def list_sites():
    try:
        return jsonify({'sites': SITES})
    except Exception as e:
        return jsonify({'error': str(e)}), 500

# Rota especial para redirecionamento
@app.route('/redirect/<int:site_id>')
def redirect_to_site(site_id):
    if 0 <= site_id < len(SITES):
        return render_template('redirect.html', site=SITES[site_id])
    return "Site não encontrado", 404

if __name__ == '__main__':
    # Use a porta fornecida pelo ambiente (importante para o Render)
    port = int(os.environ.get('PORT', 5001))
    app.run(host='0.0.0.0', port=port)
	
	document.addEventListener('DOMContentLoaded', async function() {
    try {
        const response = await fetch('/list_sites');
        const data = await response.json();
        
        const sitesContainer = document.getElementById('sites');
        
        if (data.error) {
            sitesContainer.innerHTML = `<div class="error">${data.error}</div>`;
            return;
        }

        // Adiciona botão para abrir todos os sites
        const openAllSection = document.createElement('div');
        openAllSection.className = 'open-all-section';
        openAllSection.innerHTML = `
            <p class="open-all-info">Clique no botão abaixo para abrir todos os sites em novas abas</p>
            <button class="open-all-button" id="openAllButton">
                Abrir Todos os Sites
            </button>
        `;
        sitesContainer.appendChild(openAllSection);

        // Handler para o botão de abrir todos
        document.getElementById('openAllButton').addEventListener('click', function() {
            data.sites.forEach(site => {
                window.open(site.url, '_blank');
            });
        });

        // Adiciona os sites
        const sitesGrid = document.createElement('div');
        sitesGrid.className = 'sites-grid';
        
        if (data.sites) {
            data.sites.forEach((site, index) => {
                const siteDiv = document.createElement('div');
                siteDiv.className = 'site';
                siteDiv.innerHTML = `
                    <div class="site-info">
                        <span class="site-name">${site.name}</span>
                        <span class="site-url">${site.url}</span>
                    </div>
                    <a href="${site.url}" target="_blank" class="open-button">
                        Abrir Site
                    </a>
                `;
                sitesGrid.appendChild(siteDiv);
            });
        }
        
        sitesContainer.appendChild(sitesGrid);
    } catch (error) {
        console.error('Error:', error);
        document.getElementById('sites').innerHTML = 
            `<div class="error">Erro ao carregar sites</div>`;
    }
});

flask==3.0.0
gunicorn==20.1.0

<!DOCTYPE html>
<html>
<head>
    <title>Sites de Loterias</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
</head>
<body>
    <div class="container">
        <h1>Sites de Loterias</h1>
        
        <section>
            <div id="sites" class="sites-container"></div>
        </section>
    </div>
    <script src="{{ url_for('static', filename='script.js') }}"></script>
</body>


</html>